
USER_HOME = "/home/john"
CATALINA_HOME = USER_HOME + "/bin/apache-tomcat-6.0.18"
JETTY_HOME = USER_HOME + "/dev/jetty-distribution-7.0.0.RC1"

task :default => [:deploy]
task :deploy => [:stop_server, :war, :copy, :start_server]  # make war and deploy to tomcat
task :all => [:jar, :src, :deploy]     # make jar first

# Stop server, if required. 
task :stop_server do
  puts "Stop tomcat..."
   if tomcat_running?
      sh "#{CATALINA_HOME}/bin/shutdown.sh" do |ok, res|
         puts "Error could not stop tomcat" unless ok
      end
   else
      puts "Tomcat was not running"
   end
end


task :war do
  puts "\nmake:\n"
  sh "jruby -S warble"
end

task :glassfish do
   lib_files = FileList["../java/lib/*.jar"]
   lib_files += FileList["../java/dist/lib/jboard.jar"]
   lib_files += FileList["lib/*.rb"]
   lib_files += FileList["properties/*.properties"]
   lib_files.delete_if {|f| f =~ /junit/}
      
   mkdir_p %w{ jboard-gf/lib jboard-gf/scripts jboard-gf/styles jboard-gf/images jboard-gf/log jboard-gf/config jboard-gf/tmp}
   lib_files.each do |f|
      cp "#{f}", "jboard-gf/lib"
   end   
   cp_r "scripts/.", "jboard-gf/scripts"
   cp_r "styles/.",  "jboard-gf/styles"
   cp_r "images/.",  "jboard-gf/images"
   cp_r "board.yaml",            "jboard-gf"
   cp_r "../glassfish/.",        "jboard-gf"
   cp_r "../glassfish/config/.", "jboard-gf/config"
   cp_r "../glassfish/log/.",    "jboard-gf/log"
   cp_r "../glassfish/tmp/.",    "jboard-gf/tmp"
   sh "tar cvjf jboard-gf.tar.bz2 jboard-gf/"

end

task :copy do
   puts "deploy:\n"
   rmtree "#{CATALINA_HOME}/webapps/jboard"
   cp "jboard.war", "#{CATALINA_HOME}/webapps/"
end

# Sometimes stopping tomcat takes a while; don't start unless it is actually stopped.
task :start_server do
   print "restart: "
   10.times do
      break unless tomcat_running?
      sleep 2
      print "."
   end
   puts ""
   if tomcat_running?
      puts 'ERROR: Tomcat is still running!'
   else
      puts `#{CATALINA_HOME}/bin/startup.sh`
   end
end

task :jar do
   sh 'ant -f ../java/build.xml'
end

task :src do
   sh 'ant -f ../java/build.xml source' 
end

# NB need a regex for grep that doesn't match itself; backslash dot does the trick.
def tomcat_running?
   '' != `ps ax | grep "catalina\\.startup\\.Bootstrap"`
end