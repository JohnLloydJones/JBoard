

Configuring the DataSource
JBoard expects to find it's data using a DataSource configured in the application server.
Here is an example for Tomcat 6 using a MySql. 

<Context>
  <Resource name="jdbc/JBoardDB"
    auth="Container"
    type="javax.sql.DataSource"
    maxActive="100"
    maxIdle="30"
    maxWait="10000"
    username="jboard"                         <=== Edit this to suit your DB user name
    password="jboard"                         <=== Edit this to suit your DB user's password
    driverClassName="com.mysql.jdbc.Driver"   <=== Edit this to suit your DB's jdbc driver class
    url="jdbc:mysql://localhost/jboard"       <=== Edit this to suit your DB's jdbc URL
    description="DataSource for JBoard"/>

  <ResourceLink global="jdbc/JBoardDB"
    name="jdbc/JBoardDB"
    auth="Container"
    type="javax.sql.DataSource"/>
    
    ... other stuff
    
</Context>

You will need to tell openjpa which DBDictionary to use. You can do that in the persistence.xml file
(requires a rebuild of the jboard.jar file) or, more conveniently in the openjpa.properties file. E.g:

# openjpa.jdbc.DBDictionary: oracle(maxEmbeddedBlobSize=-1,maxEmbeddedClobSize=-1)
# openjpa.jdbc.DBDictionary: mysql(UseClobs=true)
openjpa.jdbc.DBDictionary: postgres()

Exactly one DBDictionary should be present (and not commented out, of course). To change the above to use 
MySql, comment the first (oracle) and last (postgres) lines and remove the comment (#) from the second. 
Run warbler (jruby -S warble war) to generate the .war file. 
[If you are lazy, you can deploy, start the app server to unpack the files.  
Stop the app server and edit the webapps/jboard/WEB-INF/classes/openjpa.properties file as required.
Restart the app server and, with luck you are running.]

Debugging Hint: If the application fails with a stack trace reporting a NullPointerException from 
Facade.getInstance line 53, the most probable cause is that you failed to connect to the database.

NB:
The jndi name must match the one specified in the persistence.xml file. If you wish to change the name
you will have to edit the <non-jta-data-source> element to specify the jndi name you wish to use.

Open the main page in a browser 
E.g http://localhost:8080/jboard
Log in as user 'admin' with password 'password' (no quotes).

Configuring the application
After successful first time login, you will see the Personal page of the user admin. Go to your profile
and change the password immediately.

Next, you should configure the email settings. The registration process sends an email to the
address provided by the user, so you must provide the email smtp host address. You probably
need to give the user name and password for smtp login. Leave these two fields blank if your
smtp server doesn't require login.

You will almost certainly want to change the registration question and answer. The purpose of
the question/answer is to prevent automated registration. By asking a question that is trivial
to your target audience, but non-obvious to others, you can help make it hard for spammers.
The answer text may be an exact string or a regular expression.  

Some other configuration data is kept in the file webapps/jboard/WEB-INF/classes/jboard.yaml. Here you can set the
application name, the registration email text and the registration terms & conditions.








 
